@use 'sass:map';
@use '../presets/variables' as *;

@mixin background-svg($path, $width: 50px, $height: 50px) {
  display: inline-block;
  background-image: url(#{$path});
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  width: $width;
  height: $height;
  list-style: none;
}

@mixin media($size, $type: 'max', $dimension: 'width') {
  @debug "XS breakpoint: #{map.get($breakpoints, 'xs')}";
  $bp: map.get($breakpoints, $size);

  @if $bp {
    @if $type == 'max' {
      @media (max-#{$dimension}: #{$bp - 0.2px}) {
        @content;
      }
    } @else if $type == 'min' {
      @media (min-#{$dimension}: #{$bp}) {
        @content;
      }
    } @else {
      @error "Invalid media query type: #{$type}. Use 'max' or 'min'.";
    }
  } @else {
    @error "Breakpoint #{$size} not found!";
  }
}

@mixin button-styles(
  $active: true,
  $width: 120px,
  $height: 35px,
  $type: 'button',
  $font-size: 1.2rem,
  $border-radius: 10px
) {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  width: $width;
  height: $height;
  cursor: pointer;
  font-size: $font-size;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 500;
  border-radius: $border-radius;
  background: rgba(73, 67, 67, 0.7);
  color: rgb(183, 213, 61);
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
  transition: background 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease;
  text-decoration: none;

  &:hover {
    background: #333;
    box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
  }
  @if $active {
    &:active {
      background: #222;
      box-shadow: 1px 1px 3px rgba(22, 21, 21, 0.3);
    }
  }
}
 @mixin form-styles() {

 }
@mixin moving-menu($top: 40px, $left: -125px) {
  position: absolute;
  top: $top;
  left: $left;
  padding: 10px;
  flex-direction: column;
  gap: 15px;
  z-index: 10;
  transform: scaleY(0);
  transform-origin: top;

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: scaleY(0);
    }
    to {
      opacity: 1;
      transform: scaleY(1);
    }
  }
}

@mixin moving-menu-trigger() {
  display: flex;
  opacity: 1;
  animation: fadeIn 0.4s ease-out forwards;
}
